package tpUtn.hotel.implementacion;

import java.sql.PreparedStatement;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import tpUtn.hotel.entidades.Direccion;
import tpUtn.hotel.entidades.Localidad;
import tpUtn.hotel.entidades.Pais;
import tpUtn.hotel.entidades.Pasajero;
import tpUtn.hotel.entidades.Provincia;
import tpUtn.hotel.interfaces.Fechas;
import tpUtn.hotel.interfaces.PasajeroDAO;

public class PasajeroDAOImpl implements PasajeroDAO<Pasajero, Direccion, Pais, Localidad,Provincia>, ConexionDB {
	private PreparedStatement psBuscar;
	
	@Override
	public List<Pasajero> listar(String tipoDoc,int numeroDoc,String apellido,String nombre) {

		List<Pasajero> pasajeros = new ArrayList<Pasajero>();
		String query = "select * from pasajero "
				+ "where tipoDoc = ? or numeroDoc = ? or apellido = ? or nombre = ?";
		try {
			if(null == psBuscar) {
				psBuscar = getConexion().prepareStatement(query);
			}
			
			psBuscar.setString(1, tipoDoc);
			psBuscar.setInt(2, numeroDoc);
			psBuscar.setString(3, apellido);
			psBuscar.setString(4, nombre);
			ResultSet resultado = psBuscar.executeQuery(); 
			while(resultado.next()) {
				Pasajero pasajero = new Pasajero();
				pasajero.setApellido(resultado.getString("apellido"));
				pasajero.setNombre(resultado.getString("nombre"));
				pasajero.setId(resultado.getInt("idPasajero"));
				pasajero.setTipoDocumento(resultado.getString("tipoDoc"));
				pasajero.setDocumento(resultado.getInt("numeroDoc"));
				pasajero.setFechaNacimiento(Fechas.getStringAFechaSQL(resultado.getString("fecNacimiento")));
				pasajero.setCuit(resultado.getString("cuit"));
				pasajero.setDireccion(buscarDireccion(resultado.getInt("direccion")));
				pasajero.setPais(buscarPais(resultado.getInt("nacionalidad")));
				pasajero.setMail(resultado.getString("mail"));
				pasajero.setOcupacion(resultado.getString("ocupacion"));
				pasajero.setPosIVA(resultado.getString("posIVA"));
				
				
				pasajeros.add(pasajero);
				
				
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return pasajeros;
	}
	
	/*
	@Override
	public boolean crearPasajero(Pasajero pasajero) {
		
		//sentencia SQL 
	String query = "insert into pasajero (idPasajero, apellido, nombre,"
			+" tipoDoc, numeroDoc, cuit, posIVA, fecNacimiento, telefono, mail, ocupacion, nacionalidad, direccion)"
						+"values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
	try {
	 if(null == psInsertar) {
	//nos conectamos a la base de datos 
		psInsertar = getConexion().prepareStatement(query);
	}
	//cargamos la informaci√≥n que le enviaremos a la base de datos
	 psInsertar.setInt(1, pasajero.getId());
	 psInsertar.setString(2, pasajero.getApellido());
	 psInsertar.setString(3, pasajero.getNombre());
	 psInsertar.setString(4, pasajero.getTipoDocumento());
	 psInsertar.setInt(5, pasajero.getDocumento());
	 psInsertar.setString(6, pasajero.getCuit());
	 psInsertar.setString(7, pasajero.getPosIVA());
	 psInsertar.setDate(8,Date.valueOf( Fechas.getFechaSQLAString( pasajero.getFechaNacimiento() ) ));
	 psInsertar.setInt(9, pasajero.getTelefono());
	 psInsertar.setBoolean(5, alumno.getActivo());
	 //ejecutamos y devolvemos true o false si se realizo correctamente
	return psInsertar.executeUpdate() == 1;
					
	} catch (SQLException e) {
					e.printStackTrace();
		}
			return false;
	}
*/


	@Override
	public Direccion buscarDireccion(int idDireccion) {
		String query = "select * from direccion where idDireccion = ? ";
		try {
			if(null == psBuscar) {
				psBuscar = getConexion().prepareStatement(query);
			}
			psBuscar.setInt(1, idDireccion);
			
			ResultSet resultado = psBuscar.executeQuery(); 
			if(resultado.next()){
				Direccion direccion = new Direccion();
				direccion.setIdDireccion(resultado.getInt("idDireccion"));
				direccion.setCalle(resultado.getString("calle"));
				direccion.setNumero(resultado.getInt("numero"));
				direccion.setDepartamento(resultado.getString("departamento"));
				direccion.setPiso(resultado.getInt("piso"));
				direccion.setLocalidad(buscarLocalidad(resultado.getInt("localidad")));
				
				return direccion;
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public Localidad buscarLocalidad(int idLocalidad) {
		String query = "select * from localidad where idLocalidad = ? ";
		try {
			if(null == psBuscar) {
				psBuscar = getConexion().prepareStatement(query);
			}
			psBuscar.setInt(1, idLocalidad);
			
			ResultSet resultado = psBuscar.executeQuery(); 
			if(resultado.next()){
				Localidad localidad = new Localidad();
				localidad.setIdLocalidad(resultado.getInt("idLocalidad"));
				localidad.setNombre(resultado.getString("nombre"));
				localidad.setCodigoPostal(resultado.getInt("codigoPostal"));
				localidad.setProvincia(buscarProvincia(resultado.getInt("provincia")));
								
				return localidad;
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return null;
	}
	
	@Override
	public Provincia buscarProvincia(int idProvincia) {
		String query = "select * from provincia where idProvincia = ? ";
		try {
			if(null == psBuscar) {
				psBuscar = getConexion().prepareStatement(query);
			}
			psBuscar.setInt(1, idProvincia);
			
			ResultSet resultado = psBuscar.executeQuery(); 
			if(resultado.next()){
				Provincia provinciad = new Provincia();
				provinciad.setIdProvincia(resultado.getInt("idProvincia"));
				provinciad.setNombre(resultado.getString("nombre"));
				provinciad.setPais(buscarPais(resultado.getInt("pais")));			
				return provinciad;
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public Pais buscarPais(int idPais) {
		// TODO Auto-generated method stub
		return null;
	}

	

	

	

}
